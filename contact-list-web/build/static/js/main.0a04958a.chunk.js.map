{"version":3,"sources":["components/Footer.js","components/Header.js","services/ContactService.js","components/ListContactComponent.js","components/AddContactComponent.js","components/ViewContactComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","state","className","Component","Header","href","CONTACT_API_BASE_URL","axios","get","contact","post","contactId","put","delete","ListContactComponent","contacts","addContact","bind","editContact","deleteContact","viewContact","this","history","push","id","ContactService","then","res","console","log","data","setState","filter","getContacts","onClick","map","firstName","lastName","email","AddContactComponent","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","changeLabelHandler","label","changeNotesHandler","notes","saveOrUpdateContact","e","preventDefault","JSON","stringify","saveContact","status","updateContact","match","params","getContactById","document","querySelector","focus","placeholder","name","onChange","cancel","ViewContactComponent","style","marginTop","backHome","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a04958a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"footer\">\r\n                <span>CONTACT LIST APPLICATION</span>\r\n                </footer>\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a className=\"navbar-brand\" href=\"/\">Contact List Application</a></div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst CONTACT_API_BASE_URL = \"http://localhost:8080/api/v1/contacts\";\r\n\r\nclass ContactService {\r\n\r\n    getContacts() {\r\n        return axios.get(CONTACT_API_BASE_URL);\r\n    }\r\n\r\n    saveContact(contact) {\r\n        return axios.post(CONTACT_API_BASE_URL, contact);\r\n    }\r\n\r\n    getContactById(contactId) {\r\n        return axios.get(CONTACT_API_BASE_URL + '/' + contactId);\r\n    }\r\n\r\n    updateContact(contact, contactId) {\r\n        return axios.put(CONTACT_API_BASE_URL + '/' + contactId, contact);\r\n    }\r\n\r\n    deleteContact(contactId) {\r\n        return axios.delete(CONTACT_API_BASE_URL + '/' + contactId);\r\n    }\r\n\r\n}\r\n\r\nexport default new ContactService()","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService';\r\n\r\nclass ListContactComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            contacts: []\r\n        }\r\n\r\n        // Binding buttons event handlers\r\n        this.addContact = this.addContact.bind(this);\r\n        this.editContact = this.editContact.bind(this);\r\n        this.deleteContact = this.deleteContact.bind(this);\r\n        this.viewContact = this.viewContact.bind(this);\r\n    }\r\n\r\n    addContact() {\r\n        this.props.history.push('/add-contact/new');\r\n    }\r\n\r\n    editContact(id) {\r\n        this.props.history.push(`/add-contact/${id}`);\r\n    }\r\n\r\n    deleteContact(id) {\r\n        ContactService.deleteContact(id).then( res=> {\r\n            console.log(res.data);\r\n            if (res.data) {\r\n            this.setState( {contacts: this.state.contacts.filter(contact => contact.id !== id)});\r\n            } else {\r\n                console.log(\"Contact not found.\")\r\n            }\r\n        });\r\n    }\r\n\r\n    viewContact(id) {\r\n        this.props.history.push(`/view-contact/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        ContactService.getContacts().then((res) => {\r\n            this.setState({ contacts: res.data });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <h2 className=\"text-center\">Contact List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-success btn-add\" onClick={this.addContact}>ADD CONTACT</button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>E-Mail</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                            {\r\n                                this.state.contacts.map(\r\n                                    contact => \r\n                                    <tr key = {contact.id}>\r\n                                        <td> {contact.firstName} </td>\r\n                                        <td> {contact.lastName} </td>\r\n                                        <td> {contact.email} </td>\r\n                                        <td className=\"d-flex justify-content-between\"> \r\n                                            <button className=\"btn btn-primary btn-action\" onClick={ ()=> this.viewContact(contact.id) }>VIEW</button> \r\n                                            <button className=\"btn btn-info btn-action\" onClick={ ()=> this.editContact(contact.id) }>UPDATE</button>\r\n                                            <button className=\"btn btn-danger btn-action\" onClick={ ()=> this.deleteContact(contact.id) }>DELETE</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListContactComponent;","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService';\r\n\r\nclass AddContactComponent extends Component {\r\n        \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            label: '',\r\n            notes: ''\r\n        }\r\n\r\n        // Binding form handler\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changeLabelHandler = this.changeLabelHandler.bind(this);\r\n        this.changeNotesHandler = this.changeNotesHandler.bind(this);\r\n        this.saveOrUpdateContact = this.saveOrUpdateContact.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.state.id === 'new') {\r\n            document.querySelector(\".first-field\").focus();\r\n            return;\r\n        } else {\r\n            ContactService.getContactById(this.state.id).then(res=> {\r\n                let contact = res.data;\r\n                this.setState({\r\n                    firstName: contact.firstName,\r\n                    lastName: contact.lastName,\r\n                    email: contact.email,\r\n                    label: contact.label,\r\n                    notes: contact.notes\r\n                });\r\n            });\r\n            document.querySelector(\".first-field\").focus();\r\n        }\r\n        \r\n    }\r\n\r\n    changeFirstNameHandler = (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler = (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    changeLabelHandler = (event) => {\r\n        this.setState({label: event.target.value});\r\n    }\r\n\r\n    changeNotesHandler = (event) => {\r\n        this.setState({notes: event.target.value});\r\n    }\r\n\r\n    saveOrUpdateContact = (e) => {\r\n        e.preventDefault();\r\n        let contact = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            label: this.state.label,\r\n            notes: this.state.notes\r\n        };\r\n        console.log('contact = ' + JSON.stringify(contact));\r\n\r\n        if (this.state.id === 'new') {\r\n            // add\r\n            ContactService.saveContact(contact).then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.history.push('/contacts');\r\n                } else if (res.status === 404) {\r\n                    console.log(res.data);\r\n                } else if (res.status === 500) {\r\n                    console.log(res.data);\r\n                }\r\n            });      \r\n        } else {\r\n            // update\r\n            ContactService.updateContact(contact, this.state.id).then(res => {\r\n                if (res.status === 202) {\r\n                    this.props.history.push('/contacts');\r\n                } else if (res.status === 404) {\r\n                    console.log(res.data);\r\n                } else if (res.status === 500) {\r\n                    console.log(res.data);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/contacts');\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <h2 className=\"text-center\">{ this.state.id === 'new' ? 'Add' : 'Update' } Contact</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>First Name: </label>\r\n                                        <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control first-field\" value={this.state.firstName} onChange={this.changeFirstNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Last Name: </label>\r\n                                        <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" value={this.state.lastName} onChange={this.changeLastNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Email: </label>\r\n                                        <input placeholder=\"Email\" name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.changeEmailHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Label: </label>\r\n                                        <input placeholder=\"Label\" name=\"label\" className=\"form-control\" value={this.state.label} onChange={this.changeLabelHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Notes: </label>\r\n                                        <input placeholder=\"Notes\" name=\"notes\" className=\"form-control\" value={this.state.notes} onChange={this.changeNotesHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateContact}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}>Cancel</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContactComponent;","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService';\r\n\r\nclass ViewContactComponent extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            contact: {\r\n\r\n            }     \r\n        }\r\n\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        // Making the REST API call\r\n        ContactService.getContactById(this.state.id).then( res => {\r\n            this.setState({contact: res.data});\r\n        });\r\n\r\n    }\r\n\r\n    backHome() {\r\n        this.props.history.push('/contacts');\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <h2 className=\"text-center\">View Contact Details</h2>\r\n                <div className=\"card col-md-6 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <label>First Name: </label>\r\n                            <div> {this.state.contact.firstName}</div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <label>Last Name: </label>\r\n                            <div> {this.state.contact.lastName}</div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <label>Email: </label>\r\n                            <div> {this.state.contact.email}</div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <label>Label: </label>\r\n                            <div> {this.state.contact.label} </div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <label>Notes: </label>\r\n                            <div> {this.state.contact.notes} </div>\r\n                        </div>\r\n\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-info\" style={{marginTop: 30}} onClick={this.backHome.bind(this)}>Back</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewContactComponent;","import './App.css';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ListContactComponent from './components/ListContactComponent';\r\nimport AddContactComponent from './components/AddContactComponent';\r\nimport ViewContactComponent from './components/ViewContactComponent';\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n        <Router>\r\n            <Header />\r\n\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route path = \"/\" exact component = {ListContactComponent}></Route>\r\n                <Route path = \"/contacts\" component = {ListContactComponent}></Route>\r\n                <Route path = \"/add-contact/:id\" component = {AddContactComponent}></Route>\r\n                <Route path = \"/view-contact/:id\" component = {ViewContactComponent}></Route>\r\n              </Switch>\r\n            </div>\r\n            \r\n            <Footer />\r\n        </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}